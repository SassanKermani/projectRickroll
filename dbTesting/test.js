// var start = new Date()
// var hrstart = process.hrtime()
// var simulateTime = 5

// setTimeout(function(argument) {
// 	// execution time simulated with setTimeout function
// 	var end = new Date() - start,
// 		hrend = process.hrtime(hrstart)

// 	console.info('Execution time: %dms', end)
// 	console.info('Execution time (hr): %ds %dms', hrend[0], hrend[1] / 1000000)
// }, simulateTime)

/*---------------------------------------------------------------------------*/


// let hrstart = process.hrtime();
// hrend = process.hrtime(hrstart);

// let fs = require(`fs`);

// // try{
// // 	let oldTest = require(`./json.json`);
// // }catch{

// // }

// try{
// 	fs.readFile('./json.json', (err, data) => {
// 		if (err) throw err;
// 		let oldTest = data;
// 	});
// }catch{

// }


// console.log(`${hrend[0]}'s : ${hrend[1]/1000000}ms`);

/*---------------------------------------------------------------------------*/

// let requireMethod = ()=>{
// 	return(new Promise((resolve, reject)=>{

// 		let hrstart = process.hrtime();
// 		hrend = process.hrtime(hrstart);

// 		try{
// 			let oldTest = require(`./json.json`);
// 			// console.log(oldTest);
// 			resolve(`${hrend[0]}'s : ${hrend[1]/1000000}ms`);
// 		}catch{

// 		}

// 	}));
// }

// let fsModualMethod = ()=>{
// 	return(new Promise((resolve, reject)=>{

// 		let hrstart = process.hrtime();
// 		hrend = process.hrtime(hrstart);

// 		try{

// 			let fs = require(`fs`);

// 			fs.readFile('./json.json', 'utf8', (err, data) => {
// 				if (err) throw err;
// 				let oldTest = data;
// 				// console.log(data);
// 				resolve(`${hrend[0]}'s : ${hrend[1]/1000000}ms`);
// 			});
// 		}catch{

// 		}

// 	}));
// }

// requireMethod().then((a)=>{
// 	console.log(`requireMethod : ${a}`);
// });

// fsModualMethod().then((a)=>{
// 	console.log(`fsModualMethod : ${a}`);
// });

/*---------------------------------------------------------------------------*/

// let fs = require(`fs`);
// // getRandStr();
// // console.log(getRandStr());


// fs.writeFile(`OhGodWhy/thing-${getRandStr()}.json`, JSON.stringify({

// 	title : `01234567890123456789012345678901234567890123456789`,
// 	post : ``,
// 	id : `${new Date().getTime()} : 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789`

// }), (err)=>{
// 	if(err){
// 		throw err;
// 	}
// })

/*---------------------------------------------------------------------------*/

// // let start = new Date().getTime()

// let fs = require(`fs`);

// let getRandStr = ()=>{
// 	let returnStr = `${new Date().getTime()} : `;
// 	for(let i = 0; i < 100; i++){
// 		// console.log(i);
// 		returnStr =`${returnStr}${Math.floor(Math.random() * Math.floor(10))}`;
// 	}
// 	return(returnStr);
// 	// console.log(returnStr);
// }

// let tempVarI = 0;

// let doThing = ()=>{

// 	let timeTestFuntion = new Promise((resolve, reject)=>{

// 		// resolve(`ok`);

// 		// fs.readFile(`./thing.json`, 'utf8', (err, data)=>{

// 		// 	// console.log(tempVarI);
// 		// 	// console.log(data);
// 		// 	resolve(data);
// 		// })

// 		let id = `ohGodWhy/thing-${getRandStr()}.json`;

// 		// console.log(id);

// 		fs.writeFile(`${id}`, JSON.stringify({

// 			title : `01234567890123456789012345678901234567890123456789`,
// 			post : ``,
// 			id : `${new Date().getTime()} : 0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789`

// 		}), (err)=>{
// 			if(err){
// 				throw err;
// 				console.log(err)
// 			}
// 			resolve(`KO`);
// 		})		

// 	});

// 	timeTestFuntion.then((a)=>{

// 		console.log(`hit the then`);

// 		tempVarI++;

// 		console.log(tempVarI);
// 		console.log(tempVarI < 5);

// 		if(tempVarI < 1000){

// 			doThing();

// 		}else{

// 			// console.log(``);
// 			// console.log(``);
// 			// let end = new Date().getTime();
// 			// let time = end - start;
// 			// console.log( time / 1000 );

// 		}

// 	});
// }


// doThing();


/*---------------------------------------------------------------------------*/

// let start = new Date().getTime()

// let fs = require(`fs`);

// fs.readdir(`./ohGodWhy/`, (err, files)=>{
// 	if(err){ throw err;}
// 	// console.log(files);

// 	console.log(new Date().getTime() - start);

// })

/*---------------------------------------------------------------------------*/
 
let d = new Date();

console.log(`${d.getFullYear()}:${d.getMonth()}:${d.getDate()}:${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}:${d.getMilliseconds()}`);

// for(let i = 0; i < 10; i++){
// 	console.log(`${d.getFullYear()}:${d.getMonth()}:${d.getDate()}:${d.getHours()}:${d.getMinutes()}:${d.getSeconds()}:${d.getMilliseconds()}`);
// }









